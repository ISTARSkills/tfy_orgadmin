<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<istar_reports>
<reports id="3040" type_of_report="column">	
	    <column columnHandler="NONE" display_name="Section Name" isVisible="true" name="name" />		
		<column columnHandler="NONE" display_name="rookie" isVisible="true" name="rookie" />
		<column columnHandler="NONE" display_name="apprentice" isVisible="true" name="apprentice" />
		<column columnHandler="NONE" display_name="master" isVisible="true" name="master" />
		<column columnHandler="NONE" display_name="wizard" isVisible="true" name="wizard" />
	<sql>
SELECT 	batch_group. NAME, 	CAST (AVG(master) AS INTEGER) AS master, 	CAST (AVG(rookie) AS INTEGER) AS rookie, 	CAST (AVG(apprentice) AS INTEGER) AS apprentice, 	CAST (AVG(wizard) AS INTEGER) AS wizard FROM 	mastery_level_per_course, 	batch_group WHERE 	mastery_level_per_course.college_id = :college_id AND course_id = :course_id AND batch_group. ID = mastery_level_per_course.batch_group_id GROUP BY 	batch_group. NAME		</sql>
	<filter_sql>
		
	</filter_sql>	
		<title>Section Wise Performance of Students</title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>
<reports id="3041" type_of_report="column">	
	    <column columnHandler="NONE" display_name="Course Name" isVisible="true" name="course_name" />		
		<column columnHandler="NONE" display_name="rookie" isVisible="true" name="rookie" />
		<column columnHandler="NONE" display_name="apprentice" isVisible="true" name="apprentice" />
		<column columnHandler="NONE" display_name="master" isVisible="true" name="master" />
		<column columnHandler="NONE" display_name="wizard" isVisible="true" name="wizard" />
	<sql>
SELECT 	course.course_name, 	CAST (AVG(master)  AS INTEGER) AS master, 	CAST (AVG(rookie)  AS INTEGER) AS rookie, 	CAST ( 		AVG (apprentice)  AS INTEGER 	) AS apprentice, 	CAST (AVG(wizard)  AS INTEGER) AS wizard, 	CAST ( 		( 			AVG (master) + AVG (rookie) + AVG (apprentice) + AVG (wizard) 		) AS INTEGER 	) AS total FROM 	mastery_level_per_course, 	course WHERE 	 mastery_level_per_course.college_id = :college_id AND batch_group_id = :batch_group_id AND course. ID = mastery_level_per_course.course_id GROUP BY 	course.course_name ORDER BY 	total		</sql>
	<filter_sql>
		
	</filter_sql>	
		<title>Program Wise Performance of Students</title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>
<reports id="3042" type_of_report="table">	
	    <column columnHandler="NONE" display_name="Id" isVisible="true" name="id" />		
		<column columnHandler="PROFILE_IMAGE" display_name="Profile Image" isVisible="true" name="profile_image" />
		<column columnHandler="NONE" display_name="First Name" isVisible="true" name="first_name" />
		<column columnHandler="NONE" display_name="Email" isVisible="true" name="email" />
		<column columnHandler="NONE" display_name="Mobile Number" isVisible="true" name="mobile" />
		<column columnHandler="STAR_RATING" display_name="Attendance" isVisible="true" name="atten_perc" />
		<column columnHandler="NONE" display_name="Batch Groups" isVisible="true" name="batch_groups" />		
		<column columnHandler="USER_HANDLER" display_name="Action" isVisible="true" name="id"/>		
	<sql>
SELECT
	profile_image,
	first_name,
	(case when atten_perc is not null then
						
					case 
					when atten_perc 	&lt;= 20 then 1
					when atten_perc 	&gt; 20 and atten_perc &lt;=40 then 2
					when atten_perc 	&gt; 40 and atten_perc &lt;=60 then 3
          when atten_perc 	&gt; 60 and atten_perc &lt;=80 then 4
          when atten_perc 	&gt; 80 and atten_perc &lt;=100 then 5
					end
		else 0
	end ) as atten_perc,
	email,
	 mobile,
	batch_groups,
	ID,
	courses,
	course_ids, count(*) OVER() as total_rows
FROM
	(
		SELECT
			istar_user. ID,
			user_profile.first_name,
			istar_user.email,
			istar_user.mobile,
			CASE
		WHEN user_profile.profile_image LIKE 'null'
		OR user_profile.profile_image IS NULL THEN
			'http://api.talentify.in/video/android_images/' || UPPER (
				SUBSTRING (
					user_profile.first_name
					FROM
						1 FOR 1
				)
			) || '.png'
		ELSE
			'http://api.talentify.in/' || user_profile.profile_image
		END AS profile_image,
		string_agg (
			DISTINCT (batch_group. NAME),
			', '
		) AS batch_groups,
		string_agg (DISTINCT(course_name), ', ') AS courses,
		string_agg (
			DISTINCT (
				CAST (batch_group. ID AS VARCHAR)
			),
			', '
		) AS batch_group_ids,
		string_agg (
			DISTINCT (CAST(course. ID AS VARCHAR)),
			', '
		) AS course_ids
	FROM
		course,
		batch,
		batch_group,
		istar_user,
		batch_students,
		user_profile,
		user_org_mapping
	WHERE
		user_org_mapping.organization_id = :college_id
	AND user_org_mapping.user_id = istar_user. ID
	AND istar_user. ID = batch_students.student_id
	AND batch_students.batch_group_id = batch_group. ID
	AND batch_group.college_id =:college_id
	AND user_profile.user_id = istar_user. ID
	AND batch_group. ID = batch.batch_group_id
	AND batch.course_id = course. ID
	GROUP BY
		istar_user. ID,
		user_profile.first_name,
		istar_user.email,
		user_profile.profile_image
	) T1
LEFT JOIN (
	SELECT
		user_id,
		COALESCE (
			CAST (
				(
					(
						COUNT (*) FILTER (

							WHERE
								attendance.status = 'ABSENT'
						)
					) * 100 / (
						COUNT (*) FILTER (

							WHERE
								attendance.status = 'ABSENT'
							OR attendance.status = 'PRESENT'
						)
					)
				) AS INTEGER
			),
			0
		) AS atten_perc
	FROM
		attendance
	WHERE
		user_id IN (
			SELECT
				istar_user. ID
			FROM
				istar_user,
				user_org_mapping
			WHERE
				istar_user. ID = user_org_mapping.user_id
			AND user_org_mapping.organization_id = :college_id
		)
	GROUP BY
		user_id
) T2 ON (T1. ID = T2.user_id) order by :order_by_column :order_type limit :limit offset :offset

		</sql>
	<filter_sql>
		
	</filter_sql>	
		<title>Section Wise Performance of Students</title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>

<reports id="3043" type_of_report="column">	
	    <column columnHandler="NONE" display_name="Date" isVisible="true" name="created_at" />		
		<column columnHandler="NONE" display_name="Section" isVisible="true" name="batch_group_name" />
		<column columnHandler="NONE" display_name="Avg Score" isVisible="true" name="avg_score" />
		
	<sql>
	SELECT 	created_at, 	batch_group_name, 	avg_score FROM 	bg_progress WHERE 	college_id = :college_id ORDER BY 	created_at
</sql>
	<filter_sql>
		
	</filter_sql>	
		<title></title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>

<reports id="3044" type_of_report="column">	
		<column columnHandler="NONE" display_name="Course Name" isVisible="true" name="course_name" />
		<column columnHandler="NONE" display_name="Avg Score" isVisible="true" name="avg_score" />
		
	<sql>
SELECT DISTINCT 	csobj.skill_objective_id, 	C .course_name, 	CAST ( 		AVG (sp.percentage) AS INTEGER 	)as avg_score FROM 	batch_group AS bg, 	batch AS b, 	course_skill_objective AS csobj, 	course C, 	skill_precentile sp, 	batch_students AS bs WHERE 	bg.college_id = :college_id AND b.batch_group_id = bg. ID AND bs.batch_group_id = b.batch_group_id AND b.course_id = csobj.course_id AND csobj.course_id = C . ID AND csobj.skill_objective_id = sp.skill_id AND bs.student_id = sp.student_id GROUP BY 	C .course_name, 	csobj.skill_objective_id ORDER BY 	avg_score </sql>
	<filter_sql>
		
	</filter_sql>	
		<title></title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>

<reports id="3045" type_of_report="column">	
        <column columnHandler="NONE" display_name="Section Code" isVisible="true" name="batch_code" />
		<column columnHandler="NONE" display_name="Section Name" isVisible="true" name="bg_name" />
		<column columnHandler="NONE" display_name="Number of Batchs" isVisible="true" name="batches" />
		<column columnHandler="NONE" display_name="Number of Students" isVisible="true" name="course_name" />
		<column columnHandler="USER_HANDLER" display_name="Action" isVisible="true" name="bg_id"/>
	<sql>
SELECT 	T1.bg_id, 	T1.bg_name, T1.batch_code, 	COALESCE (T2.batches, 0) AS batches, 	COALESCE (T3.students, 0) AS students, count(*) OVER() as total_rows FROM 	( 		SELECT 			batch_group. ID AS bg_id, 			batch_group. NAME AS bg_name, 			batch_group.bg_desc AS bg_desc, 			batch_group.batch_code 		FROM 			batch_group 		WHERE 			 batch_group.college_id =  :college_id 				 	) T1 LEFT JOIN ( 	SELECT 		COUNT (batch. ID) AS batches, 		batch.batch_group_id 	FROM 		batch 	WHERE 		batch.batch_group_id IN ( 			SELECT 				batch_group. ID 			FROM 				batch_group 			WHERE 				 batch_group.college_id =  :college_id 				 		) 	GROUP BY 		batch.batch_group_id ) T2 ON (T2.batch_group_id = T1.bg_id) LEFT JOIN ( 	SELECT 		batch_students.batch_group_id, 		COUNT (batch_students.student_id) AS students 	FROM 		batch_students 	WHERE 		batch_students.batch_group_id IN ( 			SELECT 				batch_group. ID 			FROM 				batch_group 			WHERE 				batch_group.college_id = :college_id 			 		) 	GROUP BY 		batch_students.batch_group_id ) T3 ON (T3.batch_group_id = T1.bg_id) order by :order_by_column :order_type limit :limit offset :offset</sql>
	<filter_sql>
		
	</filter_sql>	
		<title>Sections Details</title>
		<y_axis_title>Number of Sections</y_axis_title>
</reports>
<reports id="3046" type_of_report="table">	
	    <column columnHandler="NONE" display_name="Id" isVisible="true" name="id" />		
		<column columnHandler="PROFILE_IMAGE" display_name="Profile Image" isVisible="true" name="profile_image" />
		<column columnHandler="NONE" display_name="First Name" isVisible="true" name="first_name" />
		<column columnHandler="NONE" display_name="Email" isVisible="true" name="email" />
		<column columnHandler="NONE" display_name="Mobile Number" isVisible="true" name="mobile" />
		<column columnHandler="STAR_RATING" display_name="Attendance" isVisible="true" name="atten_perc" />
		<column columnHandler="NONE" display_name="Batch Groups" isVisible="true" name="batch_groups" />		
		<column columnHandler="USER_HANDLER" display_name="Action" isVisible="true" name="id"/>		
	<sql>
SELECT 	profile_image, 	first_name, 	(case when atten_perc is not null then 						 					case 					when atten_perc 	&lt;= 20 then 1 					when atten_perc 	&gt; 20 and atten_perc &lt;=40 then 2 					when atten_perc 	&gt; 40 and atten_perc &lt;=60 then 3           when atten_perc 	&gt; 60 and atten_perc &lt;=80 then 4           when atten_perc 	&gt; 80 and atten_perc &lt;=100 then 5 					end 		else 0 	end ) as atten_perc, 	email,   mobile, 	batch_groups, 	ID, 	courses, 	course_ids, count(*) OVER() as total_rows FROM 	( 		SELECT 			istar_user. ID, 			user_profile.first_name, 			istar_user.email,       coalesce (istar_user.mobile,0) as mobile, 			CASE 		WHEN user_profile.profile_image LIKE 'null' 		OR user_profile.profile_image IS NULL THEN 			'http://api.talentify.in/video/android_images/' || UPPER ( 				SUBSTRING ( 					user_profile.first_name 					FROM 						1 FOR 1 				) 			) || '.png' 		ELSE 			'http://api.talentify.in/' || user_profile.profile_image 		END AS profile_image, 		string_agg ( 			DISTINCT (batch_group. NAME), 			', ' 		) AS batch_groups, 		string_agg (DISTINCT(course_name), ', ') AS courses, 		string_agg ( 			DISTINCT ( 				CAST (batch_group. ID AS VARCHAR) 			), 			', ' 		) AS batch_group_ids, 		string_agg ( 			DISTINCT (CAST(course. ID AS VARCHAR)), 			', ' 		) AS course_ids 	FROM 		course, 		batch, 		batch_group, 		istar_user, 		batch_students, 		user_profile, 		user_org_mapping 	WHERE 		user_org_mapping.organization_id in (SELECT id FROM organization) 	AND user_org_mapping.user_id = istar_user. ID 	AND istar_user. ID = batch_students.student_id 	AND batch_students.batch_group_id = batch_group. ID 	AND batch_group.college_id in (SELECT id FROM organization) 	AND user_profile.user_id = istar_user. ID 	AND batch_group. ID = batch.batch_group_id 	AND batch.course_id = course. ID 	GROUP BY 		istar_user. ID, 		user_profile.first_name, 		istar_user.email, 		user_profile.profile_image 	) T1 LEFT JOIN ( 	SELECT 		user_id, 		COALESCE ( 			CAST ( 				( 					( 						COUNT (*) FILTER (  							WHERE 								attendance.status = 'ABSENT' 						) 					) * 100 / ( 						COUNT (*) FILTER (  							WHERE 								attendance.status = 'ABSENT' 							OR attendance.status = 'PRESENT' 						) 					) 				) AS INTEGER 			), 			0 		) AS atten_perc 	FROM 		attendance 	WHERE 		user_id IN ( 			SELECT 				istar_user. ID 			FROM 				istar_user, 				user_org_mapping 			WHERE 				istar_user. ID = user_org_mapping.user_id 			AND user_org_mapping.organization_id in (SELECT id FROM organization) 		) 	GROUP BY 		user_id ) T2 ON (T1. ID = T2.user_id) order by :order_by_column :order_type limit :limit offset :offset

		</sql>
	<filter_sql>
		
	</filter_sql>	
		<title>Section Wise Performance of Students</title>
		<y_axis_title>Number of Students</y_axis_title>
</reports>
</istar_reports>
